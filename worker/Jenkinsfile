pipeline{
  agent none 

  stages{
    stage('build'){
      agent {
        docker{
          image 'maven:3.6.1-jdk-8-alpine'
          args '-v $HOME/.m2:/root/.m2'
        }
      

      when{
        changeset "**/worker/**"
      }

      steps{
        echo 'Compiling worker app'
        dir('worker'){
          sh 'mvn compile'
        }
      }
    }
   
    stage(test){
      
      agent {
        docker{
      when{
        changeset "**/worker/**"
      }
      steps{
        echo 'Running Unit test on worker app'
        dir('worker'){
          sh 'mvn clean test'
        }
      }
    }

    stage(package){
      agent {
        docker{
      when{
        branch 'master'
        changeset "**/worker/**"
      }
      steps{
        echo 'Packaging worker app into a jarfile'
        dir('worker'){
          sh 'mvn package -DskipTests'           
          archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
        } 
      }   
    }
    
    stage(docker-package){
      agent any 
      steps{
      echo 'Packaging worker app with docker'
      script{
        docker.withRegistry('https://index/docker/io/v1/', 'dockerlogin') {
          def workerImage = docker.build("abrahambelloso/worker:v${env.BUILD_ID}", "./worker")
          workerImage.push()
          worker.Image.push("latest")
        }
      }
      }
    }
  }


  post{
    always{ 
      echo 'Building multibranch pipeline for worker is completed...'
    }
  }
}
